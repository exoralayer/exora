syntax = "proto3";
package gluon.contracttoken.v1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gluon/contracttoken/v1/params.proto";
import "gluon/contracttoken/v1/token.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/gluon-zone/gluon/x/contracttoken/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/gluon/contracttoken/v1/params";
  }

  // Token
  rpc Token(QueryTokenRequest) returns (QueryTokenResponse) {
    option (google.api.http).get = "/gluon/contracttoken/v1/tokens/{contract_address}";
  }
  // Tokens
  rpc Tokens(QueryTokensRequest) returns (QueryTokensResponse) {
    option (google.api.http).get = "/gluon/contracttoken/v1/tokens";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryTokenRequest
message QueryTokenRequest {
  string contract_address = 1;
}

// QueryTokenResponse
message QueryTokenResponse {
  Token token = 1;
}

// QueryTokensRequest
message QueryTokensRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

// QueryTokensResponse
message QueryTokensResponse {
  repeated Token tokens = 1;
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
