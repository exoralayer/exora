syntax = "proto3";
package gluon.feerefunder.v1;

import "gluon/feerefunder/v1/fee.proto";
import "gluon/feerefunder/v1/params.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";

option go_package = "github.com/gluon-zone/gluon/x/feerefunder/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/gluon/feerefunder/v1/params";
  }

  // PendingFee queries the pending fee of the module.
  rpc PendingFee(QueryPendingFeeRequest) returns (QueryPendingFeeResponse) {
    option (google.api.http).get = "/gluon/feerefunder/v1/pending-fee";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

// QueryPendingFeeRequest
message QueryPendingFeeRequest {
  string channel_id = 1;
  string port_id = 2;
  uint64 sequence = 3;
}

// QueryPendingFeesResponse
message QueryPendingFeeResponse {
  PendingFee pending_fee = 1 [(gogoproto.nullable) = false];
}
